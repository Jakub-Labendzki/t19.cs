// Tablice 1D
// deklaracja
int[] T = new int[3];
// definicja
T[0] = 3;
T[1] = 5;
T[2] = 8;
// można połączyć deklaracje i definicję
int[] S = new int[] { 5, 7, 8, 9, 12 };
// przejście po tablicy - 2 podstawowe warianty przejść
for (int i = 0; i < S.Length; i++)
{
    Console.Write(S[i] + " ");
}
Console.WriteLine("\n");
foreach (var item in S)
{
    Console.Write(item + " ");
}
Console.WriteLine("\n");
// wypełanie tablicy liczbami losowymi
int n = 100;
Random r = new Random();
int[] L = new int[n];
for (int i = 0; i < L.Length; i++)
{
    L[i] = r.Next(1,100);
    Console.Write(L[i] + " ");
}
Console.WriteLine("\n");

// Tablice 2D
// deklaracja
int[,] M = new int[3,2];    // M[wiersz,kolumna]
// definicja
M[0, 0] = 3;
M[0, 1] = 4;
M[1, 0] = 8;
M[1, 1] = 9;
M[2, 0] = 17;
M[2, 1] = 18;
int[,] N = new int[,] { { 2, 3, 4, 5 }, { 7, 8, 9, 10 }, { 16, 17, 18, 19} };
//Console.WriteLine(N[1,3]);
for (int i = 0; i < N.Length; i++)
{
    Console.Write(N[i / N.GetLength(1),i % N.GetLength(1)] + " ");
}
Console.WriteLine("\n");
for (int i = 0; i < N.GetLength(0); i++)
{
    for (int j = 0; j < N.GetLength(1); j++)
    {
        Console.Write(N[i,j] + "\t");
    }
    Console.WriteLine();
}
// Losowe generowanie macierzy
int n = 13;
int m = 7;
int[,] G = new int[n, m];
Random r = new Random();
for (int i = 0; i < G.GetLength(0); i++)
{
    for (int j = 0; j < G.GetLength(1); j++)
    {
        G[i, j] = r.Next(100, 1000);
        Console.Write(G[i, j] + "\t");
    }
    Console.WriteLine();
}


// 3. Wygeneruj listę 12 losowych liczb dwucyfrowych podzielnych przez 7

/*Random r = new Random();
int[] T = new int[12];
for (int i = 0; i < 12; i++)
{
    T[i] = r.Next(2, 15) * 7;
    Console.WriteLine(T[i]);
}*/

--------------------------------------------------------

// Zad 1
int a = int.Parse(Console.ReadLine());
int[] X = new int[a];
int b = 0;
for (int i = 1; i < X.Length; i++)
{
    if (a % i == 0)
    {
        X[b] = i;
        b++;
    }
}
for (int i = 0; i < b; i++)
{
    Console.WriteLine(X[i]);
}

// Zad 2
Random r2 = new Random();
int[] P = new int[100];
int c = 0;
while (c < 20)
{
    int liczba = r2.Next(100, 1000);

    if ((liczba % 2 == 1) && (liczba % 3 > 0) && (liczba % 5 > 0) && (liczba % 7 > 0))
    {
        P[c] = liczba;
        c++;
    }
}
Console.WriteLine();
for (int i = 0; i < 20; i++)
{
    Console.WriteLine(P[i]);
}

// Zad 3
int[] T2 = new int[40];
Random r3 = new Random();
int suma = 0;
for (int i = 0; i < T2.Length; i++)
{
    T2[i] = r3.Next(10, 100);
    for (int j = 0; j < i; j++)
    {
        if (T2[j] == T2[i])
        {
            suma += T2[i];
        }
    }
}
return suma;

// Zad 4
int[,] G1 = new int[11, 11];
Random r4 = new Random();
int n3 = G1.GetLength(0);
int n2 = G1.GetLength(1);
int suma1 = 0;
for (int i = 0; i < n3; i++)
{
    for (int j = 0; j < n2; j++)
    {
        G1[i, j] = r4.Next(100, 1000);
        Console.Write(G1[i, j] + "\t");
    }
    Console.WriteLine();
}
for (int i = 0; i < n3 && i < n2; i++)
{
    suma1 += G1[i, i];
}
for (int i = 0; i < n3 && i < n2; i++)
{
    suma1 += G1[i, n2 - 1 - i];
}
return suma1;
